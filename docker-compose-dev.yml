services:
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: yarn start:dev auth
    env_file:
      - .env
      - ./apps/auth/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
    depends_on:
      rabbitmq:
        condition: service_healthy

  mailer-uploader:
    build:
      context: .
      dockerfile: ./apps/mailer-uploader/Dockerfile
      target: development
    command: yarn start:dev mailer-uploader
    env_file:
      - ./apps/mailer-uploader/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - 3001:3001
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  stock:
    build:
      context: .
      dockerfile: ./apps/stock/Dockerfile
      target: development
    command: yarn start:dev stock
    env_file:
      - .env
      - ./apps/stock/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3002:3002
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  rabbitmq_data: